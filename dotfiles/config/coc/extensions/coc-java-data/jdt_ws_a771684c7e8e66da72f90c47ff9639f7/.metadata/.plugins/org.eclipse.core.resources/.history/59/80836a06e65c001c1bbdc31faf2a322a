package com.bep3.supply.application.mapper;

import com.bep3.supply.application.dto.UpdateSupplyDTO;
import com.bep3.supply.domain.model.Supply;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2021-12-14T14:54:33+0100",
    comments = "version: 1.4.2.Final, compiler: Eclipse JDT (IDE) 1.4.50.v20210914-1429, environment: Java 17.0.1 (N/A)"
)
@Component
public class SupplyMapperImpl implements SupplyMapper {

    @Override
    public UpdateSupplyDTO toUpdateSupplyDTO(Supply supply) {
        if ( supply == null ) {
            return null;
        }

        UpdateSupplyDTO updateSupplyDTO = new UpdateSupplyDTO();

        updateSupplyDTO.supplyId = supply.getSupplyId();
        updateSupplyDTO.ingredient = supply.getIngredient();
        updateSupplyDTO.amount = supply.getAmount();

        return updateSupplyDTO;
    }

    @Override
    public Supply toSupply(UpdateSupplyDTO updateSupplyDTO) {
        if ( updateSupplyDTO == null ) {
            return null;
        }

        Supply supply = new Supply();

        supply.setSupplyId( updateSupplyDTO.supplyId );
        supply.setIngredient( updateSupplyDTO.ingredient );
        supply.setAmount( updateSupplyDTO.amount );

        return supply;
    }

    @Override
    public void updateSupplyFromDto(UpdateSupplyDTO dto, Supply entity) {
        if ( dto == null ) {
            return;
        }

        if ( dto.supplyId != null ) {
            entity.setSupplyId( dto.supplyId );
        }
        if ( dto.ingredient != null ) {
            entity.setIngredient( dto.ingredient );
        }
        if ( dto.amount != null ) {
            entity.setAmount( dto.amount );
        }
    }
}
