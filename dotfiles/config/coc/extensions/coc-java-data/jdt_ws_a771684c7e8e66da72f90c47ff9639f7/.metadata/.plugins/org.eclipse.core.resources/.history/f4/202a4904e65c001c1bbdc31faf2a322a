package com.bep3.delivery.application.mapper;

import com.bep3.delivery.application.dto.UpdateDeliveryDTO;
import com.bep3.delivery.domain.model.Delivery;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2021-12-14T14:54:29+0100",
    comments = "version: 1.4.2.Final, compiler: Eclipse JDT (IDE) 1.4.50.v20210914-1429, environment: Java 17.0.1 (N/A)"
)
@Component
public class DeliveryMapperImpl implements DeliveryMapper {

    @Override
    public UpdateDeliveryDTO toUpdateDeliveryDTO(Delivery delivery) {
        if ( delivery == null ) {
            return null;
        }

        UpdateDeliveryDTO updateDeliveryDTO = new UpdateDeliveryDTO();

        updateDeliveryDTO.deliveryId = delivery.getDeliveryId();
        updateDeliveryDTO.orderId = delivery.getOrderId();
        updateDeliveryDTO.status = delivery.getStatus();

        return updateDeliveryDTO;
    }

    @Override
    public Delivery toDelivery(UpdateDeliveryDTO updateDeliveryDTO) {
        if ( updateDeliveryDTO == null ) {
            return null;
        }

        Delivery delivery = new Delivery();

        delivery.setDeliveryId( updateDeliveryDTO.deliveryId );
        delivery.setOrderId( updateDeliveryDTO.orderId );
        delivery.setStatus( updateDeliveryDTO.status );

        return delivery;
    }

    @Override
    public void updateDeliveryFromDto(UpdateDeliveryDTO dto, Delivery entity) {
        if ( dto == null ) {
            return;
        }

        if ( dto.deliveryId != null ) {
            entity.setDeliveryId( dto.deliveryId );
        }
        if ( dto.orderId != null ) {
            entity.setOrderId( dto.orderId );
        }
        if ( dto.status != null ) {
            entity.setStatus( dto.status );
        }
    }
}
